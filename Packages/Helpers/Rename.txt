


Get-ChildItem -Recurse | Where-Object {$_.Name -match "Mahta"} | ForEach-Object {
    $newName = $_.Name -replace "Mahta", "Luma" -replace "masta", "luma" -replace "MAHTA", "LUMA"
    Rename-Item -Path $_.FullName -NewName $newName
}





Get-ChildItem -Recurse -File | ForEach-Object {
    if (Select-String -Path $_.FullName -Pattern "Mahta" -Quiet) {
        $content = Get-Content $_.FullName -Raw
        $content = $content -replace "Mahta", "Luma" -replace "mahta", "luma" -replace "MAHTA", "LUMA"
        Set-Content -Path $_.FullName -Value $content
    }
}





Get-ChildItem -Recurse -File | ForEach-Object {
    if ((Get-Content $_.FullName -Raw -ErrorAction SilentlyContinue) -match 'PackageReference Include="Luma\.') {
        Write-Host "Processing: $($_.FullName)"
        $content = Get-Content $_.FullName -Raw
        $newContent = $content -replace '(<PackageReference Include="Luma\.[^"]*" Version=")[^"]*(")', '${1}9.0.0${2}'
        Set-Content -Path $_.FullName -Value $newContent -NoNewline
    }
}







Get-ChildItem -Recurse -File -Include "*.csproj", "*.props", "*.targets", "*.xml" | ForEach-Object {
    $content = Get-Content $_.FullName -Raw
    $modified = $false
    
    # Check if file contains either pattern
    if ($content -match '<VersionPrefix>' -or $content -match '<RepositoryUrl>https://Luma\.Pro</RepositoryUrl>') {
        Write-Host "Processing: $($_.FullName)"
        
        # Replace VersionPrefix versions with 9.0.0
        if ($content -match '<VersionPrefix>') {
            $content = $content -replace '(<VersionPrefix>)[^<]*(</VersionPrefix>)', '${1}9.0.0${2}'
            $modified = $true
            Write-Host "  - Updated VersionPrefix to 9.0.0"
        }
        
        # Remove RepositoryUrl lines completely (including any whitespace/tabs before it)
        if ($content -match '<RepositoryUrl>https://Luma\.Pro</RepositoryUrl>') {
            $content = $content -replace '\s*<RepositoryUrl>https://Luma\.Pro</RepositoryUrl>\s*\r?\n?', ''
            $modified = $true
            Write-Host "  - Removed RepositoryUrl line"
        }
        
        if ($modified) {
            Set-Content -Path $_.FullName -Value $content -NoNewline
        }
    }
}







# Show what will be deleted
Get-ChildItem -Recurse -Directory | Where-Object {$_.Name -in @("bin", "obj")} | ForEach-Object {
    Write-Host "Found: $($_.FullName)"
}

# Then run this to delete them
Get-ChildItem -Recurse -Directory | Where-Object {$_.Name -in @("bin", "obj")} | Remove-Item -Recurse -Force









Get-ChildItem -Recurse -File | Where-Object {
    $_.BaseName -eq "nuget" -or $_.Name -eq "Push_Package.bat" -or $_.Name -eq "icon.png"
} | Remove-Item -Force
